generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PG_DATABASE_URL")
}

model User {
  id                  String               @id @default(uuid())
  stacksAddress       String               @unique
  stacksUsername      String?              @unique
  gaiaUrl             String?
  // When was the last sync
  stacksBlock         Int?
  isLegacy            Boolean              @default(false)
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  subscriptions       Subscription[]
  followers           Follows[]            @relation("following")
  following           Follows[]            @relation("follower")
  dismissableFlags    DismissableFlags?
  onboardingChecklist OnboardingChecklist?
}

model Subscription {
  id           String             @id @default(uuid())
  status       SubscriptionStatus
  nftId        Int
  downgradedAt DateTime?
  userId       String
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  user         User               @relation(fields: [userId], references: [id])
}

enum SubscriptionStatus {
  INACTIVE
  ACTIVE
}

model DismissableFlags {
  id         String    @id @default(uuid())
  onboarding DateTime?
  userId     String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  user       User      @relation(fields: [userId], references: [id])
}

model OnboardingChecklist {
  id              String           @id @default(uuid())
  completed       DateTime?
  userId          String           @unique
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  user            User             @relation(fields: [userId], references: [id])
  onboardingSteps OnboardingStep[]
}

model OnboardingStep {
  id                  String              @id @default(uuid())
  completed           DateTime?
  checklistId         String              @unique
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  onboardingChecklist OnboardingChecklist @relation(fields: [checklistId], references: [id])
}

// Gaia data
// File: app-data/following.json
model Follows {
  followerAddress  String
  follower         User     @relation("follower", fields: [followerAddress], references: [stacksAddress])
  followingAddress String
  following        User     @relation("following", fields: [followingAddress], references: [stacksAddress])
  createdAt        DateTime

  @@id([followerAddress, followingAddress])
}
